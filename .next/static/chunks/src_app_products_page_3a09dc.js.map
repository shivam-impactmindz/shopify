{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/products/page.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Cookies from \"js-cookie\";\r\nimport crypto from \"crypto\";\r\nimport \"@/app/styles/products.css\";\r\n\r\nconst SECRET_KEY = process.env.NEXT_PUBLIC_SHOPIFY_API_SECRET;\r\n\r\nexport default function ProductsPage() {\r\n  const [isValidShop, setIsValidShop] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const verifyShopAndFetchProducts = async () => {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const shop = localStorage.getItem(\"shop\");\r\n      const shopFromURL = params.get(\"shop\");\r\n      const hmac = params.get(\"hmac\");\r\n\r\n      console.log(\"Shop from URL:\", shopFromURL);\r\n      console.log(\"Shop from localStorage:\", shop);\r\n      console.log(\"HMAC from URL:\", hmac);\r\n\r\n      if (!shopFromURL || !hmac) {\r\n        router.replace(`/login?shop=${shopFromURL || \"\"}`);\r\n        return;\r\n      }\r\n\r\n      if (shop !== shopFromURL) {\r\n        router.replace(`/login?shop=${shopFromURL}`);\r\n        return;\r\n      }\r\n\r\n      // Generate HMAC on the client side\r\n      const generatedHmac = crypto.createHmac(\"sha256\", SECRET_KEY).update(shop).digest(\"hex\");\r\n      if (generatedHmac !== hmac) {\r\n        console.error(\"HMAC mismatch: Invalid shop credentials\");\r\n        router.replace(`/login?shop=${shopFromURL}`);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const verifyResponse = await fetch(\"/api/verify-shop\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ shop, hmac }),\r\n        });\r\n\r\n        const verifyData = await verifyResponse.json();\r\n        if (!verifyData.isValid) {\r\n          setIsValidShop(false);\r\n          router.replace(\"/\");\r\n          return;\r\n        }\r\n\r\n        setIsValidShop(true);\r\n\r\n        // Fetch products\r\n        const productsResponse = await fetch(`/api/products?shop=${shop}`);\r\n        const productsData = await productsResponse.json();\r\n\r\n        setProducts(productsData.products || []);\r\n      } catch (error) {\r\n        console.error(\"Error verifying shop or fetching products:\", error);\r\n        setIsValidShop(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    verifyShopAndFetchProducts();\r\n  }, [router]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (isValidShop === false) return <p>Shop validation failed. Redirecting...</p>;\r\n\r\n  return (\r\n    <div className=\"products-container\">\r\n      <h1>Products</h1>\r\n      {products.length === 0 ? (\r\n        <p>No products found.</p>\r\n      ) : (\r\n        <div className=\"products-grid\">\r\n          {products.map((product) => (\r\n            <div key={product.id} className=\"product-card\">\r\n              <img\r\n                src={product.image?.src || \"/placeholder.jpg\"}\r\n                alt={product.title}\r\n                className=\"product-image\"\r\n              />\r\n              <div className=\"product-info\">\r\n                <p className=\"product-title\">{product.title}</p>\r\n                <p className=\"product-price\">\r\n                  â‚¹{product.variants[0]?.price || \"N/A\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}