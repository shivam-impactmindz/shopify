{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/lib/database.js"],"sourcesContent":["// src\\app\\utils\\database.js\r\nimport mongoose from \"mongoose\";\r\n\r\nconst connectToDatabase = async () => {\r\n    if (mongoose.connection.readyState >= 1) return;\r\n    \r\n    await mongoose.connect(process.env.MONGO_URI, {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n    });\r\n\r\n    console.log(\"Database connected!\");\r\n};\r\n\r\n// âœ… Make sure we export it correctly\r\nexport { connectToDatabase };\r\n\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;AAC5B;;AAEA,MAAM,oBAAoB;IACtB,IAAI,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;IAEzC,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;QAC1C,iBAAiB;QACjB,oBAAoB;IACxB;IAEA,QAAQ,GAAG,CAAC;AAChB"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/models/session.js"],"sourcesContent":["// src\\app\\models\\session.js\r\nconst mongoose = require(\"mongoose\");\r\nconst sessionSchema = new mongoose.Schema({\r\n  // id: { type: String, unique: false }, // UNIQUE REMOVE KAR DIYA\r\n  state: { type: String },\r\n  shop: { type: String, trim: true, unique: true }, // Shop unique rahega\r\n  accessToken: { type: String, trim: true },\r\n  isOnline: { type: Boolean, enum: [true, false], default: false },\r\n  scope: { type: [String], default: [] },\r\n  isInstalled: { type: Boolean, default: true }, // Track installation state\r\n  uninstalledAt: { type: Date, default: null },  // Track uninstall timestamp\r\n});\r\nconst Session = mongoose.models.Session || mongoose.model(\"Session\", sessionSchema);\r\nexport default Session;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const mongoose = require(\"mongoose\");\r\n// const sessionSchema = new mongoose.Schema({\r\n//     id: {\r\n//         type: String,\r\n//     },\r\n//     state: {\r\n//         type: String,\r\n//     },\r\n//     shop: {\r\n//         type: String,\r\n//         trim: true,\r\n//     },\r\n//     accessToken: {\r\n//         type: String,\r\n//         trim: true,\r\n//     },\r\n//     isOnline: {\r\n//         type: Boolean,\r\n//         enum: [true, false],\r\n//         default: false,\r\n//     },\r\n//     scope: {\r\n//         type: [String],\r\n//         default: [],\r\n//     },\r\n// });\r\n// // Check if the model already exists to prevent OverwriteModelError\r\n// const Session = mongoose.models.Session || mongoose.model(\"Session\", sessionSchema);\r\n// export default Session;"],"names":[],"mappings":"AAAA,4BAA4B;;;;AAC5B,MAAM;AACN,MAAM,gBAAgB,IAAI,SAAS,MAAM,CAAC;IACxC,iEAAiE;IACjE,OAAO;QAAE,MAAM;IAAO;IACtB,MAAM;QAAE,MAAM;QAAQ,MAAM;QAAM,QAAQ;IAAK;IAC/C,aAAa;QAAE,MAAM;QAAQ,MAAM;IAAK;IACxC,UAAU;QAAE,MAAM;QAAS,MAAM;YAAC;YAAM;SAAM;QAAE,SAAS;IAAM;IAC/D,OAAO;QAAE,MAAM;YAAC;SAAO;QAAE,SAAS,EAAE;IAAC;IACrC,aAAa;QAAE,MAAM;QAAS,SAAS;IAAK;IAC5C,eAAe;QAAE,MAAM;QAAM,SAAS;IAAK;AAC7C;AACA,MAAM,UAAU,SAAS,MAAM,CAAC,OAAO,IAAI,SAAS,KAAK,CAAC,WAAW;uCACtD;CAQf,wCAAwC;CACxC,8CAA8C;CAC9C,YAAY;CACZ,wBAAwB;CACxB,SAAS;CACT,eAAe;CACf,wBAAwB;CACxB,SAAS;CACT,cAAc;CACd,wBAAwB;CACxB,sBAAsB;CACtB,SAAS;CACT,qBAAqB;CACrB,wBAAwB;CACxB,sBAAsB;CACtB,SAAS;CACT,kBAAkB;CAClB,yBAAyB;CACzB,+BAA+B;CAC/B,0BAA0B;CAC1B,SAAS;CACT,eAAe;CACf,0BAA0B;CAC1B,uBAAuB;CACvB,SAAS;CACT,MAAM;CACN,sEAAsE;CACtE,uFAAuF;CACvF,0BAA0B"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/api/products/route.js"],"sourcesContent":["// src/app/api/products/route.js\r\nimport { NextResponse } from \"next/server\"; // For sending JSON responses in Next.js\r\nimport { connectToDatabase } from \"@/app/lib/database\"; // Database connection function\r\nimport ShopModel from \"@/app/models/session\"; // Mongoose model to access shop session data\r\nexport async function GET(req) {\r\n    try {\r\n        await connectToDatabase();\r\n        // Get the 'shop' parameter from the request URL query string\r\n        const shop = req.nextUrl.searchParams.get(\"shop\");\r\n        if (!shop) {\r\n            return NextResponse.json({ error: \"Shop not found\" }, { status: 400 });\r\n        }\r\n        // Query the database for the shop's data using the provided 'shop' value\r\n        const shopData = await ShopModel.findOne({ shop });\r\n        if (!shopData) {\r\n            return NextResponse.json({ error: \"Shop not registered\" }, { status: 403 });\r\n        }\r\n        // Extract the accessToken from the shop data for authenticated Shopify API requests\r\n        const accessToken = shopData.accessToken;\r\n        // Shopify API call to fetch products\r\n        const response = await fetch(\r\n            `https://${shop}/admin/api/2025-01/products.json`, \r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"X-Shopify-Access-Token\": accessToken,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n\r\n            }\r\n        );\r\n        console.log('response1',response);\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to fetch products from Shopify\",\"no products\");\r\n        }\r\n        const { products } = await response.json();\r\n        return NextResponse.json({ products }, { status: 200 });\r\n    } catch (error) {\r\n        return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;AAChC,+NAA4C,wCAAwC;AACpF,0NAAwD,+BAA+B;AACvF,8NAA8C,6CAA6C;;;;AACpF,eAAe,IAAI,GAAG;IACzB,IAAI;QACA,MAAM,CAAA,GAAA,+HAAA,CAAA,oBAAiB,AAAD;QACtB,6DAA6D;QAC7D,MAAM,OAAO,IAAI,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;QAC1C,IAAI,CAAC,MAAM;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QACA,yEAAyE;QACzE,MAAM,WAAW,MAAM,iIAAA,CAAA,UAAS,CAAC,OAAO,CAAC;YAAE;QAAK;QAChD,IAAI,CAAC,UAAU;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QACA,oFAAoF;QACpF,MAAM,cAAc,SAAS,WAAW;QACxC,qCAAqC;QACrC,MAAM,WAAW,MAAM,MACnB,CAAC,QAAQ,EAAE,KAAK,gCAAgC,CAAC,EACjD;YACI,QAAQ;YACR,SAAS;gBACL,0BAA0B;gBAC1B,gBAAgB;YACpB;QAEJ;QAEJ,QAAQ,GAAG,CAAC,aAAY;QACxB,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM,yCAAwC;QAC5D;QACA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,SAAS,IAAI;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAS,GAAG;YAAE,QAAQ;QAAI;IACzD,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACrE;AACJ"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}