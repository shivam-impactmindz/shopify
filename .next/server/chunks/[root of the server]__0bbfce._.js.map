{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/lib/shopify.js"],"sourcesContent":["// src\\app\\utils\\shopify.js\r\nimport { shopifyApi, ApiVersion } from \"@shopify/shopify-api\";\r\nimport \"@shopify/shopify-api/adapters/web-api\"; // ‚úÖ Required for Next.js API routes\r\nconst shopify = shopifyApi({\r\n  apiKey: process.env.NEXT_PUBLIC_SHOPIFY_API_KEY,\r\n  apiSecretKey: process.env.NEXT_PUBLIC_SHOPIFY_API_SECRET,\r\n  scopes: process.env.NEXT_PUBLIC_SHOPIFY_API_SCOPES?.split(\",\"),\r\n  apiVersion: ApiVersion.January25,\r\n  hostName: process.env.NEXT_PUBLIC_HOST.replace(/^https?:\\/\\//, \"\"), // ‚úÖ Removes \"https://\"\r\n  hostScheme: \"https\",\r\n  isEmbeddedApp: false,\r\n});\r\nexport default shopify;\r\n\r\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAC3B;AACA,yUAAgD,oCAAoC;AADpF;AAAA;;;AAEA,MAAM,UAAU,CAAA,GAAA,6LAAA,CAAA,aAAU,AAAD,EAAE;IACzB,MAAM;IACN,YAAY;IACZ,yFAAoD,MAAM;IAC1D,YAAY,6KAAA,CAAA,aAAU,CAAC,SAAS;IAChC,UAAU,+EAA6B,OAAO,CAAC,gBAAgB;IAC/D,YAAY;IACZ,eAAe;AACjB;uCACe"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/api/auth/callback/route.js"],"sourcesContent":["import shopify from \"@/app/lib/shopify\";\r\nimport { cookies } from \"next/headers\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport crypto from \"crypto\";\r\n\r\nconst MONGO_URI = process.env.MONGO_URI;\r\nconst SECRET_KEY = process.env.NEXT_PUBLIC_SHOPIFY_API_SECRET;\r\nconst client = new MongoClient(MONGO_URI);\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    const { session } = await shopify.auth.callback({\r\n      rawRequest: req,\r\n      rawResponse: null, // No direct response needed\r\n    });\r\n\r\n    if (!session?.shop || !session?.accessToken) {\r\n      throw new Error(\"Session missing required fields (shop, accessToken)\");\r\n    }\r\n\r\n    await client.connect();\r\n    const database = client.db(\"spotifydata\");\r\n    const sessions = database.collection(\"sessions\");\r\n\r\n    const { shop, accessToken, scope, isOnline, expires } = session;\r\n    const sessionData = { shop, accessToken, scope, isOnline, expires, createdAt: new Date() };\r\n\r\n    await sessions.updateOne({ shop }, { $set: sessionData }, { upsert: true });\r\n\r\n    // ‚úÖ Generate HMAC and store in cookies\r\n    const hmac = crypto.createHmac(\"sha256\", SECRET_KEY).update(shop).digest(\"hex\");\r\n\r\n    const cookieStore = cookies();\r\n    cookieStore.set(\"shop\", shop, { secure: process.env.NODE_ENV === \"production\", maxAge: 60 * 60 * 24 * 7 });\r\n    cookieStore.set(\"hmac\", hmac, { secure: process.env.NODE_ENV === \"production\", maxAge: 60 * 60 * 24 * 7 });\r\n\r\n    const { searchParams } = new URL(req.url);\r\n    const host = searchParams.get(\"host\");\r\n    const hostWithoutProtocol = process.env.NEXT_PUBLIC_HOST.replace(/^https?:\\/\\//, \"\");\r\n    const redirectUrl = `https://${hostWithoutProtocol}/products?host=${host}&shop=${shop}&hmac=${hmac}`;\r\n\r\n    return NextResponse.redirect(redirectUrl);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Authentication failed\", details: error.message }, { status: 500 });\r\n  } finally {\r\n    await client.close();\r\n  }\r\n}\r\n\r\n\r\n// // src/app/api/auth/callback/route.js\r\n// import shopify from \"@/app/lib/shopify\";\r\n// import { cookies } from \"next/headers\";\r\n// import { NextRequest, NextResponse } from \"next/server\";\r\n// import { MongoClient } from \"mongodb\";\r\n// import crypto from \"crypto\";\r\n\r\n// const MONGO_URI = process.env.MONGO_URI;\r\n// const SECRET_KEY = process.env.NEXT_PUBLIC_SHOPIFY_API_SECRET;\r\n// const client = new MongoClient(MONGO_URI);\r\n\r\n// export async function GET(req, res) {\r\n//   if (req.method !== \"GET\") {\r\n//     return NextResponse.json({ error: \"Method Not Allowed\" }, { status: 405 });\r\n//   }\r\n\r\n//   try {\r\n//     const { session } = await shopify.auth.callback({\r\n//       rawRequest: req,\r\n//       rawResponse: res,\r\n//     });\r\n\r\n//     console.log(\"Session received:\", session);\r\n\r\n//     if (!session?.shop || !session?.accessToken) {\r\n//       throw new Error(\"Session missing required fields (shop, accessToken)\");\r\n//     }\r\n\r\n//     // ‚úÖ Connect to MongoDB\r\n//     await client.connect();\r\n//     const database = client.db(\"shopifyapp\");\r\n//     const sessions = database.collection(\"sessions\");\r\n\r\n//     // ‚úÖ Extract session data\r\n//     const { shop, accessToken, scope, isOnline, expires } = session;\r\n//     const sessionData = {\r\n//       shop,\r\n//       accessToken,\r\n//       scope,\r\n//       isOnline,\r\n//       expires,\r\n//       createdAt: new Date(),\r\n//     };\r\n\r\n//     // ‚úÖ Upsert session into MongoDB\r\n//     await sessions.updateOne(\r\n//       { shop },\r\n//       { $set: sessionData },\r\n//       { upsert: true }\r\n//     );\r\n//     console.log(\"‚úÖ Session saved successfully:\", sessionData);\r\n    \r\n//     // // Set shop in cookies\r\n//     // cookies().set(\"shop\", session.shop, {\r\n//     //   httpOnly: true,\r\n//     //   secure: process.env.NODE_ENV === \"production\",  // Secure cookie in production\r\n//     //   maxAge: 60 * 60 * 24 * 7,  // 1 week\r\n//     // });\r\n\r\n//     // Generate HMAC\r\n//     const hmac = crypto\r\n//       .createHmac('sha256', SECRET_KEY)\r\n//       .update(shop)\r\n//       .digest('hex');\r\n\r\n//     // ‚úÖ Redirect to Products page with necessary params\r\n//     const { searchParams } = new URL(req.url);\r\n//     const host = searchParams.get(\"host\");\r\n//     const hostWithoutProtocol = process.env.NEXT_PUBLIC_HOST.replace(/^https?:\\/\\//, '');\r\n//     const redirectUrl = `https://${hostWithoutProtocol}/products?host=${host}&shop=${session.shop}&hmac=${hmac}`;\r\n//     console.log(\"üîπ Redirecting to:\", redirectUrl);\r\n\r\n//     return NextResponse.redirect(redirectUrl);\r\n//   } catch (error) {\r\n//     console.error(\"‚ùå Error during OAuth callback:\", error);\r\n//     return NextResponse.json(\r\n//       { error: \"Authentication failed\", details: error.message },\r\n//       { status: 500 }\r\n//     );\r\n//   } finally {\r\n//     await client.close();\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// // src\\app\\api\\auth\\callback\\route.js\r\n// import shopify from \"@/app/lib/shopify\";\r\n// import { cookies } from \"next/headers\";\r\n// import { NextRequest, NextResponse } from \"next/server\";\r\n// import { MongoClient } from \"mongodb\";\r\n// const MONGO_URI = process.env.MONGO_URI;\r\n// const client = new MongoClient(MONGO_URI);\r\n// export async function GET(req, res) {\r\n//   if (req.method !== \"GET\") {\r\n//     return NextResponse.json({ error: \"Method Not Allowed\" }, { status: 405 });\r\n//   }\r\n//   try {\r\n//     const { session } = await shopify.auth.callback({\r\n//       rawRequest: req,\r\n//       rawResponse: res,\r\n//     });\r\n//     console.log(\"Session received:\", session);\r\n//     if (!session?.shop || !session?.accessToken) {\r\n//       throw new Error(\"Session missing required fields (shop, accessToken)\");\r\n//     }\r\n//     // ‚úÖ Connect to MongoDB\r\n//     await client.connect();\r\n//     const database = client.db(\"shopifyapp\");\r\n//     const sessions = database.collection(\"sessions\");\r\n//     // ‚úÖ Extract session data\r\n//     const { shop, accessToken, scope, isOnline, expires } = session;\r\n//     const sessionData = {\r\n//       shop,\r\n//       accessToken,\r\n//       scope,\r\n//       isOnline,\r\n//       expires,\r\n//       createdAt: new Date(),\r\n//     };\r\n//     // ‚úÖ Upsert session into MongoDB\r\n//     const existingShop = await sessions.findOne({ shop });\r\n//     if (existingShop) {\r\n//       console.log(`Shop ${shop} already exists. Skipping session creation.`);\r\n//     } else {\r\n//       // ‚úÖ Upsert session into MongoDB if shop doesn't exist\r\n//       await sessions.insertOne(sessionData);\r\n//       console.log(\"‚úÖ Session saved successfully:\", sessionData);\r\n//     }\r\n//     // ‚úÖ Redirect to About page with necessary params\r\n//     const { searchParams } = new URL(req.url);\r\n//     const host = searchParams.get(\"host\");\r\n//     // Ensure NEXT_PUBLIC_HOST does not include the protocol\r\n//     const hostWithoutProtocol = process.env.NEXT_PUBLIC_HOST.replace(/^https?:\\/\\//, '');\r\n//     const redirectUrl = `https://${hostWithoutProtocol}/products?host=${host}&shop=${session.shop}`;\r\n//     console.log(\"üîπ Redirecting to:\", redirectUrl);\r\n//     return NextResponse.redirect(redirectUrl);\r\n//   } catch (error) {\r\n//     console.error(\"‚ùå Error during OAuth callback:\", error);\r\n//     return NextResponse.json(\r\n//       { error: \"Authentication failed\", details: error.message },\r\n//       { status: 500 }\r\n//     );\r\n//   } finally {\r\n//     await client.close();\r\n//   }\r\n// }"],"names":[],"mappings":"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"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}