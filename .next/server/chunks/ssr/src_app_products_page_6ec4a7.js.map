{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/products/page.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ProductsPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   const fetchProducts = async () => {\r\n  //     try {\r\n  //       const response = await fetch(\r\n  //         \"https://95f1-223-185-56-236.ngrok-free.app/products\"\r\n  //       );\r\n\r\n  //       if (!response.ok) {\r\n  //         throw new Error(`HTTP error! Status: ${response.status}`);\r\n  //       }\r\n\r\n  //       // Check if response is actually JSON\r\n  //       const contentType = response.headers.get(\"content-type\");\r\n  //       if (!contentType || !contentType.includes(\"application/json\")) {\r\n  //         const text = await response.text();\r\n  //         throw new Error(`Unexpected response format: ${text.slice(0, 100)}`);\r\n  //       }\r\n  //       const data = await response.json();\r\n  //       setProducts(data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching products:\", error);\r\n  //       setError(error.message);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchProducts();\r\n  // }, []);\r\n\r\n  // if (error) {\r\n  //   return <div style={{ color: \"red\" }}>Error: {error}</div>;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Products</h1>\r\n      {products.length > 0 ? (\r\n        <ul>\r\n          {products.map((product) => (\r\n            <li key={product.id}>{product.title}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No products available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,eAAe;IACnB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,oBAAoB;IACpB,wCAAwC;IACxC,YAAY;IACZ,sCAAsC;IACtC,gEAAgE;IAChE,WAAW;IAEX,4BAA4B;IAC5B,qEAAqE;IACrE,UAAU;IAEV,8CAA8C;IAC9C,kEAAkE;IAClE,yEAAyE;IACzE,8CAA8C;IAC9C,gFAAgF;IAChF,UAAU;IACV,4CAA4C;IAC5C,2BAA2B;IAC3B,wBAAwB;IACxB,0DAA0D;IAC1D,iCAAiC;IACjC,QAAQ;IACR,OAAO;IAEP,qBAAqB;IACrB,UAAU;IAEV,eAAe;IACf,+DAA+D;IAC/D,IAAI;IAEJ,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;YACH,SAAS,MAAM,GAAG,kBACjB,8OAAC;0BACE,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;kCAAqB,QAAQ,KAAK;uBAA1B,QAAQ,EAAE;;;;;;;;;qCAIvB,8OAAC;0BAAE;;;;;;;;;;;;AAIX;uCAEe"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}