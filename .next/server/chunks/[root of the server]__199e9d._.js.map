{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/shopify_new%20-%202-14-25/shopify_new/my-app/src/app/api/products/route.js"],"sourcesContent":["// // src/app/api/products/route.js\r\n// import { NextResponse } from \"next/server\"; // For sending JSON responses in Next.js\r\n// import { connectToDatabase } from \"@/app/lib/database\"; // Database connection function\r\n// import ShopModel from \"@/app/models/session\"; // Mongoose model to access shop session data\r\n// export async function GET(req) {\r\n//     try {\r\n//         await connectToDatabase();\r\n//         // Get the 'shop' parameter from the request URL query string\r\n//         const shop = req.nextUrl.searchParams.get(\"shop\");\r\n//         if (!shop) {\r\n//             return NextResponse.json({ error: \"Shop not found\" }, { status: 400 });\r\n//         }\r\n//         // Query the database for the shop's data using the provided 'shop' value\r\n//         const shopData = await ShopModel.findOne({ shop });\r\n//         if (!shopData) {\r\n//             return NextResponse.json({ error: \"Shop not registered\" }, { status: 403 });\r\n//         }\r\n//         // Extract the accessToken from the shop data for authenticated Shopify API requests\r\n//         const accessToken = shopData.accessToken;\r\n//         // Shopify API call to fetch products\r\n//         const response = await fetch(\r\n//             `https://${shop}/admin/api/2025-01/products.json`, \r\n//             {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"X-Shopify-Access-Token\": accessToken,\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n\r\n//             }\r\n//         );\r\n//         console.log('response1',response);\r\n//         if (!response.ok) {\r\n//             throw new Error(\"Failed to fetch products from Shopify\",\"no products\");\r\n//         }\r\n//         const { products } = await response.json();\r\n//         return NextResponse.json({ products }, { status: 200 });\r\n//     } catch (error) {\r\n//         return NextResponse.json({ error: error.message }, { status: 500 });\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function GET() {\r\n  const hostWithoutProtocol = process.env.NEXT_PUBLIC_HOST.replace(/^https?:\\/\\//, \"\");\r\n  const redirectUrl = `https://${hostWithoutProtocol}/products`;\r\n  \r\n  return NextResponse.json(redirectUrl);\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"AAAA,mCAAmC;AACnC,uFAAuF;AACvF,0FAA0F;AAC1F,8FAA8F;AAC9F,mCAAmC;AACnC,YAAY;AACZ,qCAAqC;AACrC,wEAAwE;AACxE,6DAA6D;AAC7D,uBAAuB;AACvB,sFAAsF;AACtF,YAAY;AACZ,oFAAoF;AACpF,8DAA8D;AAC9D,2BAA2B;AAC3B,2FAA2F;AAC3F,YAAY;AACZ,+FAA+F;AAC/F,oDAAoD;AACpD,gDAAgD;AAChD,wCAAwC;AACxC,kEAAkE;AAClE,gBAAgB;AAChB,iCAAiC;AACjC,6BAA6B;AAC7B,6DAA6D;AAC7D,0DAA0D;AAC1D,qBAAqB;AAErB,gBAAgB;AAChB,aAAa;AACb,6CAA6C;AAC7C,8BAA8B;AAC9B,sFAAsF;AACtF,YAAY;AACZ,sDAAsD;AACtD,mEAAmE;AACnE,wBAAwB;AACxB,+EAA+E;AAC/E,QAAQ;AACR,IAAI;;;;AAMJ;;AAEO,eAAe;IACpB,MAAM,sBAAsB,+EAA6B,OAAO,CAAC,gBAAgB;IACjF,MAAM,cAAc,CAAC,QAAQ,EAAE,oBAAoB,SAAS,CAAC;IAE7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}